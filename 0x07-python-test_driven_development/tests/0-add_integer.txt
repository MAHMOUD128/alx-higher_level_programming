# 0-add_integer.txt

================================
The ``Integers Addition`` module
================================

This library is very simple, since it only has one function
called ``add_integer()``.

Using ``add_integer``
---------------------

First import ``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

Numbers
=======

``add_integer()`` returns the addition of ints of its arguments.
For numbers, that value is equivalent to using ``int(a) + int(b)``.

::

    >>> add_integer(1, 2)
    3
    >>> add_integer(100, -2)
    98
    >>> add_integer(2)
    100

It also works with floating-point values.

::

    >>> add_integer(100.3, -2)
    98
    >>> add_integer(100.5, 1)
    101
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

Non-Numbers
===========

::

    >>> add_integer(4, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer("School")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
