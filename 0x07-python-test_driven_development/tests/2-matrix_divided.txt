# 2-matrix_divided.txt

=============================
The ``Matrix Divider`` module
=============================

This library is very simple, since it only has one function
called ``matrix_divided()``.

Using ``matrix_divided``
------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Numbers
=======

``matrix_divided()`` returns a new matrix of divided elements of the input matrix.

::

	>>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
	...
        >>> matrix_divided(matrix, 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix = [
	...    [-1, -2, -3],
	...    [-4, -5, -6]
	... ]
	...
	>>> matrix_divided(matrix, -3)	
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

It also works with floating-point values.

::

	>>> matrix = [
	...     [1.5, 2.5, 3.5],
	...     [4.5, 5.5, 6.5]
	... ]
	...
	>>> matrix_divided(matrix, .5)
	[[3.0, 5.0, 7.0], [9.0, 11.0, 13.0]]
	>>> matrix = [
	...     [1.5, 2.5, 3.5],
	...     [4.5, 5.5, 6.5]
	... ]
	...
	>>> matrix_divided(matrix, -0.5)
	[[-3.0, -5.0, -7.0], [-9.0, -11.0, -13.0]]
	>>> matrix = [
	...    [1, 2, 3],
	...    [4, 5]
	... ]
	...
	>>> matrix_divided(matrix, 1)
	Traceback (most recent call last):
            ...
        TypeError: Each row of the matrix must have the same size
	>>> matrix_divided([[1]], 0)
	Traceback (most recent call last):
            ...
        ZeroDivisionError: division by zero

Non-Numbers
===========

::

	>>> matrix_divided(None, None)
	Traceback (most recent call last):
            ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[0]], None)
	Traceback (most recent call last):
            ...
        TypeError: div must be a number
